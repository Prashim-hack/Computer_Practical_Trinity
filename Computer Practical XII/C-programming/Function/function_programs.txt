//wap to print the greatest value among four numbers using a function
#include<stdio.h>
int greatest();
int greatest1(int, int, int, int);
int main(){
	
	printf("Author: \t Prashim Timsina. \n");
	printf("Program: \t Greatest number among 4 nums.\n");
	
	int a, b, c, d, g;
	printf("Enter four numbers: \n");
	scanf("%d%d%d%d",&a, &b, &c, &d);
	g = greatest1(a, b, c, d);
	
	printf("The greatest number is = %d", g);
	
}


int greatest1(int a, int b , int c , int d){
	int e;
	if(a>b && a>c && a>d ){
		 e = a;
	}
	else if(b>a && b>c && b>d){
		e = b;
	}
	else if(c>a && c>b && c>d){
		e = c;
	}
	else{
		e = d;
	}
	return e;
}

// to calculate the area and the perimeter of a rectangle.
#include<stdio.h>
int area(int a, int b);
int perimeter(int a, int b);

int main(){
	
	printf("Author: \t Prashim Timsina \n");
	printf("Program: \t Area and Perimeter \n");
	
	int l, b, aream, perimeterm;
	
	printf("Enter length and breath: ");
	scanf("%d%d", &l, &b);
	
	aream = area(l,b);
	perimeterm = perimeter(l,b);
	
	printf("\nThe area is = %d", aream);
	printf("\nThe perimeter is = %d", perimeterm);
	
	return 0; 
}
int area(a, b){
	return a*b;
}

int perimeter(a, b){
	return 2*(a+b);
}

//WAP to know a number is even or odd using function.
#include<stdio.h>
int even_odd(int n);
int main()
{
    printf("Author: \t Prashim Timsina. \n");
	printf("Program: \t Even or odd.\n");

    int n;
    printf("Enter the number: ");
    scanf("%d",&n);
    even_odd(n);
    return 0;
}
int even_odd(int n)
{
    if(n%2==0)
    {
        printf("The number is even");
    }
    else
    {
        printf("The number is odd");
    }
}

// to know whether a number is prime or composite
#include<stdio.h>

int prime(int a);

int main(){
	
	printf("Author: \t Prashim Timsina \n");
	printf("Program: \t Prime or Composite \n");
	
	int num, p, c;
	printf("Enter a number:");
	scanf("%d", &num);
	
	p = prime(num);
	
	if(p == 0){
		printf("The number is Prime");
	}
	else{
		printf("The number is composite");
	}
	return 0;
}

int prime(a){
	int b;
	for(b=2; b<a/2; b++){
		if(a%b==0){
			return 1;
		}	
	}
	return 0;
}

8.
#include <stdio.h>

// Function prototype for array sum calculation
int calculateSum(int arr[], int size);

int main() {
    
    printf("Author: Prashim Timsina\n");
    printf("Program: Maximum of Two Numbers\n");

    int size;
    printf("Enter the size of the array: ");
    scanf("%d", &size);

    int arr[size];

    printf("Enter the elements of the array:\n");
    for (int i = 0; i < size; i++) {
        scanf("%d", &arr[i]);
    }

    int sum = calculateSum(arr, size);
    printf("Sum of elements in the array: %d\n", sum);

    return 0;
}

// Function to calculate the sum of elements in the array
int calculateSum(int arr[], int size) {
    int sum = 0;
    for (int i = 0; i < size; i++) {
        sum += arr[i];
    }
    return sum;
}

9.
#include <stdio.h>

// Function to add two matrices and store the result in the third matrix
void addMat(int r, int c, int m1[][c], int m2[][c], int res[][c]) {
    for (int i = 0; i < r; i++) {
        for (int j = 0; j < c; j++) {
            res[i][j] = m1[i][j] + m2[i][j];
        }
    }
}

// Function to print a matrix
void printMat(int r, int c, int mat[][c]) {
    for (int i = 0; i < r; i++) {
        for (int j = 0; j < c; j++) {
            printf("%d\t", mat[i][j]);
        }
        printf("\n");
    }
}

int main() {
    printf("Author: Prashim Timsina\n");
    printf("Program: Sum of Two Matrices\n");

    int r, c;

    printf("Enter the number of rows: ");
    scanf("%d", &r);

    printf("Enter the number of columns: ");
    scanf("%d", &c);

    int mat1[r][c], mat2[r][c], resMat[r][c];

    // Input for matrix 1
    printf("\nEnter the elements of Matrix 1:\n");
    for (int i = 0; i < r; i++) {
        for (int j = 0; j < c; j++) {
            scanf("%d", &mat1[i][j]);
        }
    }

    // Input for matrix 2
    printf("\nEnter the elements of Matrix 2:\n");
    for (int i = 0; i < r; i++) {
        for (int j = 0; j < c; j++) {
            scanf("%d", &mat2[i][j]);
        }
    }

    // Calling the function to add the matrices
    addMat(r, c, mat1, mat2, resMat);

    printf("\nMatrix 1:\n");
    printMat(r, c, mat1);

    printf("\nMatrix 2:\n");
    printMat(r, c, mat2);

    printf("\nSum of the matrices:\n");
    printMat(r, c, resMat);

    return 0;
}

10
#include <stdio.h>

// Function to perform selection sort on the array
void selectionSort(int arr[], int size) {
    for (int i = 0; i < size - 1; i++) {
        int min_index = i;
        for (int j = i + 1; j < size; j++) {
            if (arr[j] < arr[min_index]) {
                min_index = j;
            }
        }
        // Swap the minimum element with the element at index i
        int temp = arr[i];
        arr[i] = arr[min_index];
        arr[min_index] = temp;
    }
}

// Function to print the elements of the array
void printArray(int arr[], int size) {
    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

int main() {
    printf("Author: Prashim Timsina\n");
    printf("Program: Sorting Numbers in an Array\n\n");

    int size;
    printf("Enter the size of the array: ");
    scanf("%d", &size);

    int arr[size];
    printf("Enter the elements of the array:\n");
    for (int i = 0; i < size; i++) {
        scanf("%d", &arr[i]);
    }

    printf("\nOriginal array: ");
    printArray(arr, size);

    // Call the selectionSort function to sort the array
    selectionSort(arr, size);

    printf("Sorted array: ");
    printArray(arr, size);

    return 0;
}

11.
#include <stdio.h>

// Function to find the length of a string
int stringLength(char str[]) {
    int length = 0;
    while (str[length] != '\0') {
        length++;
    }
    return length;
}

int main() {
    printf("Author: Prashim Timsina\n");
    printf("Program: Finding the Length of a String\n\n");

    char str[100];

    printf("Enter a string: ");
    scanf("%[^\n]", str);

    int length = stringLength(str);
    printf("Length of the string: %d\n", length);

    return 0;
}

12.
// WAP to sort ‘n’ number of strings using function.
#include<stdio.h>
#include<string.h>

void sorting(char a[100][100], int n);

int main(){
	printf("Author: Prashim Timsina\n");
    printf("Program: Sort ‘n’ number of strings using function\n\n");
    
    char a[100][100];
    int n,i;
    
    printf("Enter the number of strings: \t");
    scanf("%d",&n);
    
    for(i=0; i<n ; i++){
    	printf("Enter string in [%d]:\t ", i);
    	scanf("%s", a[i]);
	}
	sorting(a,n);
	return 0;
}
void sorting(char a[100][100], int n){
	int i,j;
	char b[100];
	for(i=0; i<n; i++){
		for(j=i+1; j<n; j++){
			if(strcmp(a[i],a[j])>0){
				strcpy(b,a[i]);
				strcpy(a[i],a[j]);
				strcpy(a[j],b);
			}
		}
	}
	printf("\nThe Sorted String is: \n");
	for(i=0; i<n; i++){
		printf("%s\n",a[i]);
	}
	
}

13.
#include <stdio.h>

// Recursive function to calculate factorial
unsigned long long fact(int n) {
    if (n == 0 || n == 1) {
        return 1;
    } 
	else {
        return n * fact(n - 1);
    }
}

int main() {
    printf("Author: Prashim Timsina\n");
    printf("Program: Factorial Calculation\n\n");

    int n;

    printf("Enter a non-negative integer: ");
    scanf("%d", &n);

    if (n < 0) {
        printf("Error: Factorial is not defined for negative numbers.\n");
    } else {
        unsigned long long f = fact(n);
        printf("Factorial of %d is %llu\n", n, f);
    }

    return 0;
}

14
#include <stdio.h>

// Recursive function to generate the nth Fibonacci number
unsigned long long fibonacci(int n) {
    if (n <= 2) {
        return 1;
    } 
	else {
        return fibonacci(n - 1) + fibonacci(n - 2);
    }
}

int main() {
    printf("Author: Prashim Timsina\n");
    printf("Program: Printing Fibonacci Series (Recursive)\n");

    int n = 1;

    while (1) {
        unsigned long long fib = fibonacci(n);
        if (fib > 100) {
            break;
        }
        printf("%llu ", fib);
        n++;
    }

    printf("\n");

    return 0;
}
